# TIL Template

## 날짜: 2025-02-10

### 스크럼

### 새로 배운 내용
#### 주제 1: 도커 기초
- 도커 장점: 하이퍼바이저와 게스트 OS가 없어 경량화 되어있음. 이미지 복제, 이관 배포가 쉽고 효율적. Container 수행 시간이 빠르다.
- 하이퍼바이저: VM에서 가상 OS를 지원하는 것
- container: 소프트웨어와 실행에 필요한 패키지를 컨테이너 단위로 묶어서 배포할 수 있도록 지원하는 오픈소스 도구이다.
- LXC: Linux container. 리눅스 시스템에 동작하고 있는 프로세스마다 독자적인 리눅스 시스템 환경을 구축하는 것. 
- chroot:  특정 디렉토리 경로를 root로 지정하여 환경을 분리하고 상위 디렉토리에 접근하지 못하게 하여 프로세스를 독립할 수 있는 개념.
  cgroups: 리눅스에서 프로세스를 그룹화하고, 해당 그룹의 시스템 리소스 사용을 관리하고 제한하는 데 사용.
  namespace: 한 덩어리의 데이터에 이름을 붙여 분할 함으로써 충돌 가능성을 줄이고, 쉽게 참조할 수 있도록 하여 프로세스 독립을 지원하는 기능
- 도커이미지: 소스 코드, 라이브러리, 종속성, 도구 및 응용 프로그램을 실행하는데 필요한 기타 파일을 포함하는 불변 파일이다
- 이미지 레이어: 파일 시스템의 변경사항을 캡처하는 단위이다. 레이어의 재사용을 가능하게 하여 빌드 속도와 배포에 필요한 저장 공간을 절약할 수 있다.
- public repository: 컨테이너 이미지를 저장하고 공유하는 repository
- private repository: 개인 서버에 구축하는 도커 이미지 저장소. 회사 내 혹은 개인적으로 만든 이미지를 올리고 관리함
- 도커 볼륨: container 내부의 데이터를 유지하고 싶은 경우 사용.
           컨테이너 내부의 데이터를 외부로 연결함. 컨테이너 내부의 수정이 외부 폴더에 반영되고, 삭제 이후에도 데이터 유지 가능.
- Infra as Code: 인프라 설치를 코드로 관리하여 자동화하는 것.
- dockerfile: 컨테이너 빌드에 필요한 작업 명령이 저장된 파일. 
- multistage docker build: 여러 단계로 나누어 빌드를 진행하고 후에 합치는 것. 최소한의 구성만 포함하여 이미지 크기를 최소화함.
- docker compose: 여러 개의 docker container들을 하나의 서비스로 정의하고 구성해 하나의 묶음으로 관리할 수 있는 어플리케이션


### 오늘의 회고
- 개념은 이해가 되지만 생소한 용어가 많아서 추가 학습이 필요할 것 같다.

### 참고 자료 및 링크
